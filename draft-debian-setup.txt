Next steps:

(1) 2x (or 3x) debian keys (SHA256 check and fingerprint check and use checked keys)
(2) debsig policy for all repos
(3) locale config
(4) keyboard config

# once keys and repo config are updated, try to enforce debsig policy for all repositories
https://www.google.com/search?q=add+debsig+policy+for+debian+repositories
https://www.google.com/search?q=if+I+have+signed-by+in+my+list+file+do+I+need+to+add+a+debsig-verify+policy%3F

# Keys from here (check SHA256)
https://lists.debian.org/debian-devel-announce/2025/04/msg00001.html

Fingerprints from here:
https://ftp-master.debian.org/keys.html


# key check commands

gpg --no-default-keyring --with-colons --import-options show-only --import /usr/share/keyrings/mozilla-archive-keyring.asc | awk -F':' '$1=="fpr"{print $10}'

gpg --no-default-keyring --with-colons --import-options show-only --import /usr/share/keyrings/1password-archive-keyring.asc | awk -F':' '$1=="fpr"{print $10}'
gpg --no-default-keyring --with-colons --import-options show-only --import /usr/share/keyrings/1password-archive-keyring.gpg | awk -F':' '$1=="fpr"{print $10}'

https://wiki.debian.org/VerifyISOImage

echo "\
for key_file in /usr/share/keyrings/*; do
    if [ -f \"\$key_file\" ]; then
        echo \"Importing key: \$key_file\"
        gpg --import \"\$key_file\"
    fi
done" | bash

Signed-By: /usr/share/keyrings/trixie-archive-keyring.asc
Signed-By: /usr/share/keyrings/trixie-security-keyring.asc
Signed-By: /usr/share/keyrings/trixie-release-keyring.asc



sudo apt install \
gnome-core \
evince- \
papers \
alacritty \
gnome-terminal- \
gnome-console- \
ptyxis \
totem \
showtime \
firefox-esr- \
firefox- \
epiphany-browser \
gnome-shell-extension-appindicator \
gnome-shell-extension-prefs \
libayatana-appindicator3-1  \
seahorse \
gnome-remote-desktop \
freerdp3-wayland

# https://gist.github.com/tdcosta100
# https://gist.github.com/onomatopellan/c5220c0efddaff69aaff77cca80b7b8e?permalink_comment_id=5680043#gistcomment-5680043
# https://docs.redhat.com/en/documentation/red_hat_enterprise_linux/10/html/administering_rhel_by_using_the_gnome_desktop_environment/remotely-accessing-the-desktop#connecting-to-a-remote-desktop-session-on-a-headless-server-for-a-single-user
# https://discourse.gnome.org/t/with-ssh-only-access-how-do-you-configure-headless-gnome-remote-desktop/24998
# https://std.rocks/gnulinux_rdp_remotedesktop.html

mkdir -p ~/.local/share/gnome-remote-desktop

export GRDCERTDIR=~/.local/share/gnome-remote-desktop

openssl genrsa -out ${GRDCERTDIR}/tls.key 4096

# Use the ubuntu-live X509 distinguished name to avoid invalid certificate errors

openssl req -new -key ${GRDCERTDIR}/tls.key -out ${GRDCERTDIR}/tls.csr -subj "/C=DE/ST=Private/L=Home/O=Family/OU=IT Department/CN=ubuntu-live"

openssl x509 -req -days 100000 -signkey ${GRDCERTDIR}/tls.key -in ${GRDCERTDIR}/tls.csr -out ${GRDCERTDIR}/tls.crt

grdctl --headless rdp set-tls-key ~/.local/share/gnome-remote-desktop/tls.key



Unused commands:
openssl req -new -key ${GRDCERTDIR}/tls.key -out ${GRDCERTDIR}/tls.csr -subj "/C=AU/ST=QLD/L=Locality/O=OrgName/OU=OrgUnit/CN=WSL2-rdp-login"
sudo -u gnome-remote-desktop winpr-makecert3 -silent -rdp -path ~gnome-remote-desktop rdp-tls

DESKTOP_SESSION=default \
GDMSESSION=default \
GNOME_SHELL_SESSION_MODE=default \
GTK_IM_MODULE=ibus \
GTK_MODULES=gail:atk-bridge \
IM_CONFIG_CHECK_ENV=1 \
IM_CONFIG_PHASE=1 \
QT_ACCESSIBILITY=1 \
QT_IM_MODULE=ibus \
XDG_CURRENT_DESKTOP=default:GNOME \
XDG_DATA_DIRS=/usr/share/default:$XDG_DATA_DIRS \
XDG_SESSION_TYPE=wayland \
XMODIFIERS=@im=ibus \
MUTTER_DEBUG_DUMMY_MODE_SPECS=2368x1480 \
gnome-session


D3F3JM6D24303H7:3389


Try again from scratch (no mucking about with polkit this time)
Enable only remote desktop and not screensharing (and not both)

If grd fails, try xrdp

# https://avivarma1.medium.com/setting-up-debian-on-wsl2-with-systemd-fb4831dd7b82

wsl.conf settings:

cat <<EOF > /etc/wsl.conf
# https://devblogs.microsoft.com/commandline/automatically-configuring-wsl/
# https://learn.microsoft.com/en-us/windows/wsl/wsl-config

# Use systemd in WSL2
[boot]
systemd=true

# Enable WSL support for interop process like launching Windows apps and adding path variables
[interop]
appendWindowsPath=true

# Enable Automatic mounting of Windows drive(s) when the distribution is launched
[automount]
enabled=true

# Enable access to the Windows GPU via para-virtualization
[gpu]
enabled=true

# Separate WSL network settings from Windows host
[network]
hostname=DebWSL
generateHosts=false
generateResolvConf=false

EOF

cat /etc/wsl.conf



# ###### #
# locale #
# ###### #

echo "\
# This file lists locales that you wish to have built. You can find a list
# of valid supported locales at /usr/share/i18n/SUPPORTED, and you can add
# user defined locales to /usr/local/share/i18n/SUPPORTED. If you change
# this file, you need to rerun locale-gen.

Phil.UTF-8 UTF-8
en_GB.UTF-8 UTF-8
en_AU.UTF-8 UTF-8
en_US.UTF-8 UTF-8
C.UTF-8 UTF-8
" | sudo tee /etc/locale.gen

sudo locale-gen

apt-cache policy 1password | grep Installed | awk -F ': ' '{print $2}'