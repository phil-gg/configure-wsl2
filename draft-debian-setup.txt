3. Update and configure Debian, by cloning this repo into `~/git/phil-gg/configure-wsl2`, and running shell script:
    ```
    sudo apt update && sudo apt upgrade
    ```
    ```
    sudo apt install git
    ```
...More to go here...

# Firefox section:

sudo apt install wget gpg

mkdir -p ~/.gnupg && chmod 700 ~/.gnupg

wget -q https://packages.mozilla.org/apt/repo-signing-key.gpg -O- | sudo tee /etc/apt/keyrings/packages.mozilla.org.asc > /dev/null

gpg -n -q --import --import-options import-show /etc/apt/keyrings/packages.mozilla.org.asc | awk '/pub/{getline; gsub(/^ +| +$/,""); if($0 == "35BAA0B33E9EB396F59CA838C0BA5CE6DC6315A3") print "\nThe key fingerprint matches ("$0").\n"; else print "\nVerification failed: the fingerprint ("$0") does not match the expected one.\n"}'

sudo touch /etc/apt/sources.list.d/mozilla.sources && sudo chmod 777 /etc/apt/sources.list.d/mozilla.sources

cat <<EOF > /etc/apt/sources.list.d/mozilla.sources
Types: deb
URIs: https://packages.mozilla.org/apt
Suites: mozilla
Components: main
Signed-By: /etc/apt/keyrings/packages.mozilla.org.asc
EOF

sudo chmod 644 /etc/apt/sources.list.d/mozilla.sources && stat -c %a /etc/apt/sources.list.d/mozilla.sources

sudo apt-get update && sudo apt-get install firefox-devedition firefox-devedition-l10n-en-gb libpci3 libegl1

Need to reboot WSL2 here for firefox to run without errors:
wsl.exe --shutdown

Test run firefox using wslg:
firefox-devedition


sudo apt install gnome-core evince- papers alacritty gnome-terminal- gnome-console- ptyxis totem showtime firefox-esr- firefox- epiphany-browser seahorse gnome-remote-desktop freerdp3-wayland

# https://gist.github.com/tdcosta100
# https://gist.github.com/onomatopellan/c5220c0efddaff69aaff77cca80b7b8e?permalink_comment_id=5680043#gistcomment-5680043
# https://docs.redhat.com/en/documentation/red_hat_enterprise_linux/10/html/administering_rhel_by_using_the_gnome_desktop_environment/remotely-accessing-the-desktop#connecting-to-a-remote-desktop-session-on-a-headless-server-for-a-single-user
# https://discourse.gnome.org/t/with-ssh-only-access-how-do-you-configure-headless-gnome-remote-desktop/24998
# https://std.rocks/gnulinux_rdp_remotedesktop.html

mkdir -p ~/.local/share/gnome-remote-desktop

export GRDCERTDIR=~/.local/share/gnome-remote-desktop

openssl genrsa -out ${GRDCERTDIR}/tls.key 4096

# Use the ubuntu-live X509 distinguished name to avoid invalid certificate errors

openssl req -new -key ${GRDCERTDIR}/tls.key -out ${GRDCERTDIR}/tls.csr -subj "/C=DE/ST=Private/L=Home/O=Family/OU=IT Department/CN=ubuntu-live"

openssl x509 -req -days 100000 -signkey ${GRDCERTDIR}/tls.key -in ${GRDCERTDIR}/tls.csr -out ${GRDCERTDIR}/tls.crt

grdctl --headless rdp set-tls-key ~/.local/share/gnome-remote-desktop/tls.key





Unused commands:
openssl req -new -key ${GRDCERTDIR}/tls.key -out ${GRDCERTDIR}/tls.csr -subj "/C=AU/ST=QLD/L=Locality/O=OrgName/OU=OrgUnit/CN=WSL2-rdp-login"
sudo -u gnome-remote-desktop winpr-makecert3 -silent -rdp -path ~gnome-remote-desktop rdp-tls

DESKTOP_SESSION=default \
GDMSESSION=default \
GNOME_SHELL_SESSION_MODE=default \
GTK_IM_MODULE=ibus \
GTK_MODULES=gail:atk-bridge \
IM_CONFIG_CHECK_ENV=1 \
IM_CONFIG_PHASE=1 \
QT_ACCESSIBILITY=1 \
QT_IM_MODULE=ibus \
XDG_CURRENT_DESKTOP=default:GNOME \
XDG_DATA_DIRS=/usr/share/default:$XDG_DATA_DIRS \
XDG_SESSION_TYPE=wayland \
XMODIFIERS=@im=ibus \
MUTTER_DEBUG_DUMMY_MODE_SPECS=2368x1480 \
gnome-session


D3F3JM6D24303H7:3389


Try again from scratch (no mucking about with polkit this time)
Enable only remote desktop and not screensharing (and not both)

If grd fails, try xrdp

wsl.conf settings:

cat <<EOF > /etc/wsl.conf
# https://devblogs.microsoft.com/commandline/automatically-configuring-wsl/
# https://learn.microsoft.com/en-us/windows/wsl/wsl-config

# Use systemd in WSL2
[boot]
systemd=true

# Enable WSL support for interop process like launching Windows apps and adding path variables
[interop]
appendWindowsPath=true

# Enable Automatic mounting of Windows drive(s) when the distribution is launched
[automount]
enabled=true

# Enable access to the Windows GPU via para-virtualization
[gpu]
enabled=true

# Separate WSL network settings from Windows host
[network]
hostname=DebWSL
generateHosts=false
generateResolvConf=false

EOF

cat /etc/wsl.conf

